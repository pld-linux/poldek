commit ab4f31ec7afa21d7a769ad6ceb5ec176667191b2
Author: mis <mistoo@gmail.com>
Date:   Sat Mar 1 20:02:11 2025 +0100

    fix: do not check http connection with 'HEAD /' when proxied

diff --git a/vfile/vfff/http.c b/vfile/vfff/http.c
index 92effa2..fa0fc74 100644
--- a/vfile/vfff/http.c
+++ b/vfile/vfff/http.c
@@ -790,27 +790,6 @@ static time_t parse_date(const char *dt)
     return ts;
 }
 
-static
-int vhttp_vcn_is_alive(struct vcn *cn)
-{
-    char req_line[256];
-
-    if (cn->state != VCN_ALIVE)
-        return 0;
-
-    make_req_line(req_line, sizeof(req_line), "HEAD", "/");
-
-    if (!httpcn_req(cn, req_line, NULL))
-        return 0;
-
-    if (!httpcn_get_resp(cn)) {
-        cn->state = VCN_DEAD;
-        return 0;
-    }
-
-    return 1;
-}
-
 static int is_closing_connection_status(struct http_resp *resp)
 {
     int close_cn = 0;
@@ -836,6 +815,34 @@ static int is_closing_connection_status(struct http_resp *resp)
     return close_cn;
 }
 
+static int vhttp_vcn_is_alive(struct vcn *cn)
+{
+    char req_line[256];
+
+    if (cn->state != VCN_ALIVE)
+        return 0;
+
+    if (cn->flags & VCN_PROXIED)
+        return 0;
+
+    make_req_line(req_line, sizeof(req_line), "HEAD", "/");
+
+    if (!httpcn_req(cn, req_line, NULL))
+        return 0;
+
+    if (!httpcn_get_resp(cn)) {
+        cn->state = VCN_DEAD;
+        return 0;
+    }
+
+    if (is_closing_connection_status(cn->resp)) {
+        cn->state = VCN_DEAD;
+        return 0;
+    }
+
+    return 1;
+}
+
 static
 int is_redirected_connection(struct http_resp *resp, struct vfff_req *rreq)
 {
diff --git a/vfile/vfff/vfff.c b/vfile/vfff/vfff.c
index f745ec1..cd014f9 100644
--- a/vfile/vfff/vfff.c
+++ b/vfile/vfff/vfff.c
@@ -436,5 +436,10 @@ int vfff_transfer_file(struct vcn *cn, struct vfff_req *vreq, long total_size)
     if (vreq->progress_fn)
         vreq->progress_fn(vreq->progress_fn_data, total_size, -1);
 
-    return is_err == 0;
+    if (is_err == 0 && cn->state == VCN_ALIVE) {
+        cn->ts_is_alive = time(0); /* update alive timestamp on success */
+        return 1;
+    }
+
+    return 0;
 }
diff --git a/vfile/vfff/vfff.h b/vfile/vfff/vfff.h
index 22665b0..4f448de 100644
--- a/vfile/vfff/vfff.h
+++ b/vfile/vfff/vfff.h
@@ -60,6 +60,7 @@ struct vfff_req;
 /* flags */
 #define VCN_SUPPORTS_SIZE  (1 << 0)
 #define VCN_SUPPORTS_MDTM  (1 << 1)
+#define VCN_PROXIED        (1 << 9)
 
 struct vcn {
     int       proto;
diff --git a/vfile/vfffmod.c b/vfile/vfffmod.c
index 98f828d..c6a8503 100644
--- a/vfile/vfffmod.c
+++ b/vfile/vfffmod.c
@@ -202,8 +202,12 @@ static struct vcn *vcn_pool_do_connect(struct vf_request *req)
     if (cn == NULL) {
         cn = vcn_new(vcn_proto, host, port, login, passwd,
                      req->proxy_login, req->proxy_passwd);
-        if (cn)
+        if (cn) {
+            if (req->proxy_host)
+                cn->flags |= VCN_PROXIED;
+
             n_list_push(vcn_pool, cn);
+        }
     }
 
     return cn;
