diff --git a/arg_packages.c b/arg_packages.c
index 48499a9..fab7618 100644
--- a/arg_packages.c
+++ b/arg_packages.c
@@ -350,6 +350,11 @@ int arg_packages_add_pkg(struct arg_packages *aps, struct pkg *pkg)
     return 1;
 }
 
+int arg_packages_add_pkgs(struct arg_packages *aps, const tn_array *pkgs)
+{
+    n_array_concat_ex(aps->packages, pkgs, (tn_fn_dup)pkg_link);
+    return 1;
+}
 
 static
 int arg_packages_load_list(struct arg_packages *aps, const char *fpath)
diff --git a/arg_packages.h b/arg_packages.h
index 611111a..13e8ba2 100644
--- a/arg_packages.h
+++ b/arg_packages.h
@@ -38,7 +38,7 @@ EXPORT int arg_packages_add_pkgmaska(struct arg_packages *aps, tn_array *masks);
 EXPORT int arg_packages_add_pkgfile(struct arg_packages *aps, const char *pathname);
 EXPORT int arg_packages_add_pkglist(struct arg_packages *aps, const char *path);
 EXPORT int arg_packages_add_pkg(struct arg_packages *aps, struct pkg *pkg);
-EXPORT int arg_packages_add_pkga(struct arg_packages *aps, tn_array *pkgs);
+EXPORT int arg_packages_add_pkgs(struct arg_packages *aps, const tn_array *pkgs);
 
 EXPORT int arg_packages_setup(struct arg_packages *aps, struct pm_ctx *ctx);
 
diff --git a/poldek_ts.c b/poldek_ts.c
index 5185f55..398aafd 100644
--- a/poldek_ts.c
+++ b/poldek_ts.c
@@ -943,44 +943,31 @@ static int ts_run_uninstall(struct poldek_ts *ts)
 /* just verify deps, conflicts, ordering, etc */
 static int ts_run_verify(struct poldek_ts *ts)
 {
-    int nerr = 0, rc = 1;
+    int nerr = 0;
 
     //n_assert(poldek_ts_issetf(ts, POLDEK_TS_VERIFY));
 
-    if (poldek_ts_get_arg_count(ts) == 0) {
-        logn(LOGERR, _("Nothing to do"));
+    if (!ts_prerun(ts))
         return 0;
-        // XXX disabled feature of whole set verification, does anybody needs that?
-        //load_sources(ts->ctx);
-
-    } else {
-        if (!ts_prerun(ts))
-            return 0;
 
-        if (!load_sources(ts->ctx))
-            return 0;
-
-        unsigned flags = TS_MARK_DEPS | TS_MARK_VERBOSE | TS_MARK_CAPSINLINE;
-        rc = ts_mark_arg_packages(ts, flags);
-        (void)rc;               /* XXX unused for now */
-    }
+    if (!load_sources(ts->ctx))
+        return 0;
 
-    /* XXX disabled feature of whole set verification
-    if (poldek_ts_get_arg_count(ts) > 0) {
-        pkgs = pkgmark_get_packages(ts->pms, PKGMARK_MARK | PKGMARK_DEP);
+    unsigned flags = TS_MARK_DEPS | TS_MARK_CAPSINLINE;
 
+    if (poldek_ts_get_arg_count(ts) == 0) { /* no args */
+        arg_packages_add_pkgs(ts->aps, ts->ctx->ps->pkgs);
     } else {
-        pkgs = n_ref(ts->ctx->ps->pkgs);
+        flags |= TS_MARK_VERBOSE;
     }
 
-    if (pkgs == NULL)
-        return 0;
-    */
+    ts_mark_arg_packages(ts, flags);
 
     tn_array *pkgs = pkgmark_get_packages(ts->pms, PKGMARK_ANY);
     if (pkgs == NULL)
         return 0;
 
+    /* just print errors here, deps are already verified by ts_mark_arg_packages */
     if (ts->getop(ts, POLDEK_OP_VRFY_DEPS)) {
         msgn(3, _("Verifying dependencies..."));
         if (pkgmark_log_unsatisfied_dependecies(ts->pms) > 0)
