--- poldek-0.30-cvs20080820.23/arg_packages.c~	2009-03-04 00:02:23.000000000 +0200
+++ poldek-0.30-cvs20080820.23/arg_packages.c	2009-03-04 00:02:34.012264942 +0200
@@ -428,7 +428,7 @@
     if (poldek_VERBOSE > 1) {
         int i;
         
-        msgn(2, "%s: %d package(s) found:", mask, n_array_size(pkgs));
+        msgn(2, _("%s: %d package(s) found:"), mask, n_array_size(pkgs));
         for (i=0; i < n_array_size(pkgs); i++)
             msgn(2, " - %s", pkg_snprintf_s(n_array_nth(pkgs, i)));
     }
@@ -628,10 +628,10 @@
             }
         }
         
-        if (poldek_VERBOSE > 2) 
-            msgn(1, "%s: choosen %s among %d packages", key,
+        if (poldek_VERBOSE > 2)
+            msgn(1, _("%s: choosen %s among %d packages"), key,
                  pkg_snprintf_s(pkg), n_array_size(pkgs));
-        
+
         n_array_push(topkgs, pkg_link(pkg));
     }
     
--- poldek-0.30-cvs20080820.23/./cli/alias.c~	2008-02-02 22:39:01.000000000 +0200
+++ poldek-0.30-cvs20080820.23/./cli/alias.c	2009-03-04 00:03:40.535590911 +0200
@@ -159,7 +159,7 @@
             logn(LOGWARN, _("%s: could not determine aliased command"),
                  cmd->name);
         else
-            msgn(3, "%s => aliased %s", cmd->name, cmd->aliasto);
+            msgn(3, _("%s => aliased %s"), cmd->name, cmd->aliasto);
     }
 }
 
--- poldek-0.30-cvs20080820.23/./cli/su.c~	2008-02-02 23:16:37.000000000 +0200
+++ poldek-0.30-cvs20080820.23/./cli/su.c	2009-03-04 00:04:00.512262048 +0200
@@ -115,7 +115,7 @@
         return 0;
     }
 
-    msgn(2, "Running as user '%s'\n", user); 
+    msgn(2, _("Running as user '%s'\n"), user); 
     return 1;
 }
 
--- poldek-0.30-cvs20080820.23/./conf.c~	2008-05-24 23:59:54.000000000 +0300
+++ poldek-0.30-cvs20080820.23/./conf.c	2009-03-04 00:04:41.845626927 +0200
@@ -1133,11 +1133,11 @@
             add_param(ht_sect, sectnam, name, value, addparam_flags,
                       af->path, nline);
         } else 
-            msgn(1, "%s: skipped %s::%s", af->path, sectnam, name);
+            msgn(1, _("%s: skipped %s::%s"), af->path, sectnam, name);
     }
     
 
-    msgn(3, "-- %s EOF --", af->path);
+    msgn(3, _("-- %s EOF --"), af->path);
     
 
     if (ht) {
--- poldek-0.30-cvs20080820.23/./fileindex.c~	2008-01-23 01:59:52.000000000 +0200
+++ poldek-0.30-cvs20080820.23/./fileindex.c	2009-03-04 00:05:59.365623692 +0200
@@ -335,7 +335,7 @@
     if ((c1 || c2) && verbose > 0) {
         char buf[256];
         pkg_snprintf(buf, sizeof(buf), pkg1);
-        msgn(1, "add cnfl: %s %c-%c %s", buf, c2 ? :' ', c1 ? :' ', 
+        msgn(1, _("add cnfl: %s %c-%c %s"), buf, c2 ? :' ', c1 ? :' ', 
             pkg_snprintf_s(pkg2));
     }
 #endif
@@ -527,7 +527,7 @@
                     continue;
             }
             if (pathprinted == 0) {
-                msgn(0, "\nPath: %s%s", *cnfl->path == '/' ? "" : "/",
+                msgn(0, _("\nPath: %s%s"), *cnfl->path == '/' ? "" : "/",
                      cnfl->path);
                 pathprinted = 1;
             }
@@ -537,7 +537,7 @@
         }
     }
     n_array_free(paths);
-    msgn(0, "%d file conflicts found", nconflicts);
+    msgn(0, _("%d file conflicts found"), nconflicts);
     return nconflicts;
 }
 
@@ -643,11 +643,11 @@
         
         if (n_array_size(opkgs) > 5)
             n += n_snprintf(&pkgstr[n], sizeof(pkgstr) - n,
-                            "[%d packages left]", n_array_size(opkgs) - 5);
-        logn(LOGERR, "%s: orphaned directory from %s", path, pkgstr);
+                            _("[%d packages left]"), n_array_size(opkgs) - 5);
+        logn(LOGERR, _("%s: orphaned directory from %s"), path, pkgstr);
     }
     norphans = n_array_size(paths);
-    msgn(0, "%d orphaned directories found", norphans);
+    msgn(0, _("%d orphaned directories found"), norphans);
     n_array_free(paths);
     n_hash_free(orphanh);
 
@@ -721,7 +721,7 @@
     for (i=0; i < size; i++) {
         char key[PATH_MAX];
         
-        msgn(2, "Looking for path %s -> %s (%s)", pkg_id(pkg), pkg_id(ptab[i]),
+        msgn(2, _("Looking for path %s -> %s (%s)"), pkg_id(pkg), pkg_id(ptab[i]),
              path);
 
         n_snprintf(key, sizeof(key), "%s -> %s", pkg_id(pkg), pkg_id(ptab[i]));
@@ -843,12 +843,12 @@
                 n += n_snprintf(&pkgstr[n], sizeof(pkgstr) - n,
                                 "...", mreq->ncandidates - 3);
         
-            logn(LOGERR, "%s: %s: directory not in required packages "
-                 "(missing Requires: %s?)", id, mreq->path, pkgstr);
+            logn(LOGERR, _("%s: %s: directory not in required packages "
+                 "(missing Requires: %s?)"), id, mreq->path, pkgstr);
             norphans++;
         }
     }
-    msgn(0, "%d semi-orphaned directories found", norphans);
+    msgn(0, _("%d semi-orphaned directories found"), norphans);
     n_array_free(pkgids);
     n_hash_free(missreqh);
     return norphans;
--- poldek-0.30-cvs20080820.23/./pkgdir/dir/dir.c~	2009-03-02 18:36:49.000000000 +0200
+++ poldek-0.30-cvs20080820.23/./pkgdir/dir/dir.c	2009-03-04 00:06:39.086835080 +0200
@@ -221,7 +221,7 @@
         if (mtime_index) {
             pkg = search_in_mtime_index(mtime_index, ent->d_name, &st);
             if (pkg) {
-                msgn(3, "%s: file seems untouched, loaded from previous index",
+                msgn(3, _("%s: file seems untouched, loaded from previous index"),
                      pkg_filename_s(pkg));
                 pkg = pkg_link(pkg);
                 remap_groupid(pkg, pkgroups, prev_pkgdir);
@@ -230,7 +230,7 @@
 
         if (pkg == NULL) {  /* mtime changed, but try compare content */
             if (!pm_rpmhdr_loadfile(path, &h)) {
-                logn(LOGWARN, "%s: read header failed, skipped", path);
+                logn(LOGWARN, _("%s: read header failed, skipped"), path);
                 continue;
             }
             
@@ -240,7 +240,7 @@
             if (prev_pkgdir) {
                 pkg = search_in_prev(prev_pkgdir, h, ent->d_name, &st);
                 if (pkg) {
-                    msgn(3, "%s: seems untouched, loaded from previous index",
+                    msgn(3, _("%s: seems untouched, loaded from previous index"),
                          pkg_snprintf_s(pkg));
                     pkg = pkg_link(pkg);
                     remap_groupid(pkg, pkgroups, prev_pkgdir);
@@ -253,7 +253,7 @@
             
             nnew++;
             n_assert(h);        /* loaded in previous if block */
-            msgn(3, "%s: loading header...", n_basenam(path));
+            msgn(3, _("%s: loading header..."), n_basenam(path));
             pkg = pm_rpm_ldhdr(na, h, n_basenam(path), st.st_size, PKG_LDWHOLE);
             n_assert(pkg);
             
--- poldek-0.30-cvs20080820.23/./pkgdir/pndir/update.c~	2007-06-24 14:48:07.000000000 +0300
+++ poldek-0.30-cvs20080820.23/./pkgdir/pndir/update.c	2009-03-04 00:07:11.142236416 +0200
@@ -304,7 +304,7 @@
             if (memcmp(md, current_md, TNIDX_DIGEST_SIZE) == 0)
                 first_patch_found = 1;
             else {
-                msgn(2, "Check diff (ts = %ld, %ld) %s (searching %s)\n",
+                msgn(2, _("Check diff (ts = %ld, %ld) %s (searching %s)\n"),
                      (long)pkgdir->ts, (long)ts, md, current_md);
 
                 if (poldek_verbose() > 3) {
--- poldek-0.30-cvs20080820.23/./pkgset.c~	2008-01-22 14:36:39.000000000 +0200
+++ poldek-0.30-cvs20080820.23/./pkgset.c	2009-03-04 00:08:12.872782026 +0200
@@ -391,7 +391,7 @@
     if (verb && poldek_VERBOSE > 2) {
         int i;
             
-        msg(2, "Installation order:\n");
+        msg(2, _("Installation order:\n"));
         for (i=0; i < n_array_size(ps->ordered_pkgs); i++) {
             struct pkg *pkg = n_array_nth(ps->ordered_pkgs, i);
             msg(2, "%d. %s\n", i, pkg->name);
@@ -697,7 +697,7 @@
     n_buf_free(nbuf);
 
     if (outfile)
-        msgn(0, "Graph saved as %s", outfile);
+        msgn(0, _("Graph saved as %s"), outfile);
     
     return 1;
 }
@@ -754,7 +754,7 @@
     n_buf_free(nbuf);
 
     if (outfile)
-        msgn(0, "LanVi graph saved as %s", outfile);
+        msgn(0, _("LanVi graph saved as %s"), outfile);
     
     return 1;
 }
--- poldek-0.30-cvs20080820.23/./pkgset-req.c~	2008-05-24 11:12:25.000000000 +0300
+++ poldek-0.30-cvs20080820.23/./pkgset-req.c	2009-03-04 00:09:02.085813192 +0200
@@ -118,7 +118,7 @@
     pkgs = pkgmark_get_packages(pms, PKGMARK_UNMETDEPS);
     if (pkgs) {
         n_assert(n_array_size(pkgs));
-        msgn(4, "Packages with unsatisfied dependencies:");
+        msgn(4, _("Packages with unsatisfied dependencies:"));
     
         for (i=0; i < n_array_size(pkgs); i++) {
             struct pkg *pkg = n_array_nth(pkgs, i);
@@ -184,7 +184,7 @@
                 matches = n_hash_get(cache, streq);
 
                 if (!matches) 
-                    msgn(4, " req %-35s --> NOT FOUND", streq);
+                    msgn(4, _(" req %-35s --> NOT FOUND"), streq);
                 else if (n_array_size(matches) > 0) {
                     msg(4, " req %-35s --> ", streq);
                     for (ii=0; ii < n_array_size(matches); ii++) 
@@ -213,7 +213,7 @@
         l_err_notfound:
             nerrors++;
             if (poldek_VERBOSE > 3)
-                msgn(4, " req %-35s --> NOT FOUND", capreq_snprintf_s(req));
+                msgn(4, _(" req %-35s --> NOT FOUND"), capreq_snprintf_s(req));
 
             pkgset_add_unreq(ps, pkg, req, 0);
             pkg_set_unmetdeps(pms, pkg);
@@ -397,7 +397,7 @@
 
     if (!matched && pkgset_pm_satisfies(ps, req)) {
         matched = 1;
-        msgn(4, " req %-35s --> PM_CAP", capreq_snprintf_s(req));
+        msgn(4, _(" req %-35s --> PM_CAP"), capreq_snprintf_s(req));
         
         *suspkgs = NULL;
         *npkgs = 0;
@@ -591,7 +591,7 @@
                 }
                 
             } else {
-                msgn(4, " cnfl %-35s --> NOT FOUND",capreq_snprintf_s(cnfl));
+                msgn(4, _(" cnfl %-35s --> NOT FOUND"), capreq_snprintf_s(cnfl));
             }
         }
     }
--- poldek-0.30-cvs20080820.23/./pm/pset/pset.c~	2008-05-13 18:55:32.000000000 +0300
+++ poldek-0.30-cvs20080820.23/./pm/pset/pset.c	2009-03-04 00:10:01.492220009 +0200
@@ -584,7 +584,7 @@
             
         DBGF("in %p(%p) %s\n", pkg, tmp, pkg_id(pkg));
         if (pkg->recno > 0)
-            logn(LOGERR, "%s: recno is set, should not happen", pkg_id(pkg));
+            logn(LOGERR, _("%s: recno is set, should not happen"), pkg_id(pkg));
         
         pkgset_add_package(db->ps, pkg);
         pkgdir_add_package(pkgdir, pkg);    
@@ -600,7 +600,7 @@
         else if (!do_pkgtslink(db, ts->cachedir, pkg, path))
             return 0;
         
-        msgn(2, "Copying %s to %s", path, pkgdir->path);
+        msgn(2, _("Copying %s to %s"), path, pkgdir->path);
     }
     //dumpdir(pkgdir);
     return 1;
@@ -643,7 +643,7 @@
 
             DBGF("un %p(%p) %s\n", pkg, tmp, pkg_id(pkg));
             n_array_push(db->paths_removed, n_strdup(path));
-            msgn(2, "Removing %s", path);
+            msgn(2, _("Removing %s"), path);
         }
     }
     return 1;
@@ -677,7 +677,7 @@
     nchanges = 0;               /* count real made changes */
     n_assert(n_array_size(db->ps->pkgdirs) == 1);
     pkgdir = n_array_nth(db->ps->pkgdirs, 0);
-    msgn(0, "Operating on %s", pkgdir->path);
+    msgn(0, _("Operating on %s"), pkgdir->path);
 
     for (i=0; i < n_array_size(db->paths_removed); i++) {
         const char *path = n_array_nth(db->paths_removed, i);
@@ -688,7 +688,7 @@
         
         if (!ts->getop(ts, POLDEK_OP_JUSTDB)) {
             if (unlink(path) != 0) {
-                logn(LOGERR, "%s: unlink failed: %m", path);
+                logn(LOGERR, _("%s: unlink failed: %m"), path);
                 rc = 0;
                 break;
             }
--- poldek-0.30-cvs20080820.23/./pm/rpm/misc.c~	2008-07-22 18:34:53.000000000 +0300
+++ poldek-0.30-cvs20080820.23/./pm/rpm/misc.c	2009-03-04 00:10:32.778885699 +0200
@@ -121,7 +121,7 @@
     };
 
     i = 0;
-    msgn(3, "Loading internal capabilities");
+    msgn(3, _("Loading internal capabilities"));
     while (functions[i]) {
         functions[i++](&ds, NULL);
     }
--- poldek-0.30-cvs20080820.23/./split.c~	2008-02-02 23:49:04.000000000 +0200
+++ poldek-0.30-cvs20080820.23/./split.c	2009-03-04 00:10:58.952242782 +0200
@@ -313,7 +313,7 @@
         for (i=0; i<n_array_size(stack); i++) {
             struct pkg *pkg = n_array_nth(stack, i);
             pkg_set_color(pkg, PKG_COLOR_WHITE);
-            msgn(3, "%s: rollback", pkg_snprintf_s(pkg));
+            msgn(3, _("%s: rollback"), pkg_snprintf_s(pkg));
         }
         rc = 0;
     }
@@ -464,7 +464,7 @@
             
             if (fnmatch(pd->mask, pkg->name, 0) == 0) {
                 pri = pd->pri;
-                msgn(2, "split: assign %d pri to %s (mask %s)", pri,
+                msgn(2, _("split: assign %d pri to %s (mask %s)"), pri,
                      pkg_id(pkg), pd->mask);
                 nmached++;
                 break;
--- poldek-0.30-cvs20080820.23/./uninstall.c~	2008-03-02 22:05:56.000000000 +0200
+++ poldek-0.30-cvs20080820.23/./uninstall.c	2009-03-04 00:11:59.532317383 +0200
@@ -195,12 +195,12 @@
             if (pkg_isset_mf(uctx->pms, dbpkg, DBPKG_REV_ORPHANED))
                 continue;       /* was there */
 
-            msgn_i(3, indent, "  %s requires %s", pkg_id(pkg), pkg_id(dbpkg));
+            msgn_i(3, indent, _("  %s requires %s"), pkg_id(pkg), pkg_id(dbpkg));
             
             if (pkg_leave_orphans(uctx, dbpkg))
                 continue;
             
-            msgn_i(1, indent, "%s marks orphaned %s (req %s)",
+            msgn_i(1, indent, _("%s marks orphaned %s (req %s)"),
                    pkg_id(pkg), pkg_id(dbpkg), capreq_snprintf_s(req));
 
             pkg_set_mf(uctx->pms, dbpkg, DBPKG_REV_ORPHANED);
@@ -380,7 +380,7 @@
     int i;
     for (i=0; i < n_array_size(uctx->unpkgs); i++) {
         struct pkg *dbpkg = n_array_nth(uctx->unpkgs, i);
-        msgn(1, "freedbset %d %s", dbpkg->_refcnt, pkg_id(dbpkg));
+        msgn(1, _("freedbset %d %s"), dbpkg->_refcnt, pkg_id(dbpkg));
     }
 #endif    
     n_array_free(uctx->unpkgs);
@@ -395,7 +395,7 @@
 
     for (i=0; i < n_array_size(uctx->unpkgs); i++) {
         struct pkg *dbpkg = n_array_nth(uctx->unpkgs, i);
-        msgn(1, "mark %s", pkg_id(dbpkg));
+        msgn(1, _("mark %s"), pkg_id(dbpkg));
         pkg_hand_mark(uctx->ts->pms, dbpkg);
         n++;
     }
@@ -534,7 +534,7 @@
     int32_t e = 0;
     int matched = 0;
     
-    msgn(2, "Trying %s\n", mask);
+    msgn(2, _("Trying %s\n"), mask);
     if (resolve_package(uctx, ts, mask, NULL))
         return 1;
             
@@ -546,7 +546,7 @@
     p = strrchr(tmp, '-');
     *p = '#';
         
-    msgn(2, "  Trying %s\n", tmp);
+    msgn(2, _("  Trying %s\n"), tmp);
                 
     if (resolve_package(uctx, ts, tmp, NULL))
         return 1;
@@ -558,7 +558,7 @@
         else
             n_snprintf(nmask, sizeof(nmask), "%s#%s-%s", n, v, r);
 
-        msgn(2, "    Trying %s\n", nmask);
+        msgn(2, _("    Trying %s\n"), nmask);
         DBGF("try %s => %s (%s, %s, %s)\n", mask, nmask, n, v, r);
         matched = resolve_package(uctx, ts, nmask, NULL);
         
@@ -570,7 +570,7 @@
                 n_snprintf(nmask, sizeof(nmask), "%s#%d:%s-%s", n, e, v, r);
             else
                 n_snprintf(nmask, sizeof(nmask), "%s#%s-%s", n, v, r);
-            msgn(2, "      Trying %s (arch=%s)\n", nmask, p);
+            msgn(2, _("      Trying %s (arch=%s)\n"), nmask, p);
             matched = resolve_package(uctx, ts, nmask, p);
         }
     }
